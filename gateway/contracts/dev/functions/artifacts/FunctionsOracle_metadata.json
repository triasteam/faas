{
	"compiler": {
		"version": "0.8.6+commit.11564f7e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "Empty",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "EmptyBillingRegistry",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "EmptyPublicKey",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "EmptyRequestData",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InconsistentReportData",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "UnauthorizedPublicKeyChange",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "requestId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "requestingContract",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "requestInitiator",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "subscriptionId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "subscriptionOwner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "OracleRequest",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "requestId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "reason",
						"type": "string"
					}
				],
				"name": "OracleRequestTimeout",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "requestId",
						"type": "bytes32"
					}
				],
				"name": "OracleResponse",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "EXPIRY_TIME",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "fulfillOracleRequest",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_requestId",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "oracleAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "score",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "resp",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "err",
						"type": "bytes"
					}
				],
				"name": "fulfillRequestByNode",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "init",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "respSelector",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "functionId",
						"type": "bytes32"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "sendRequest",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "THIS CONTRACT HAS NOT GONE THROUGH ANY SECURITY REVIEW. DO NOT USE IN PROD.",
			"errors": {
				"Empty()": [
					{
						"details": "An operation (e.g. {front}) couldn't be completed due to the queue being empty."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"fulfillRequestByNode(bytes32,address,uint256,bytes,bytes)": {
					"details": "Response must have a valid callback, and will delete the associated callback storage before calling the external contract.",
					"params": {
						"_requestId": "The fulfillment request ID that must match the requester's",
						"err": "node occurs error when to execute function",
						"oracleAddress": "oracle contract address",
						"resp": "node response",
						"score": "node score that the execute function"
					},
					"returns": {
						"_0": "Status if the external call was successful"
					}
				},
				"sendRequest(bytes32,bytes)": {
					"params": {
						"data": "Encoded Functions request data, use FunctionsClient API to encode a request",
						"functionId": "A unique subscription ID allocated by billing system, a client can make requests from different contracts referencing the same subscription"
					}
				}
			},
			"title": "Functions Oracle contract",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"fulfillRequestByNode(bytes32,address,uint256,bytes,bytes)": {
					"notice": "Called by the node to fulfill requests"
				},
				"sendRequest(bytes32,bytes)": {
					"notice": "Sends a request (encoded as data) using the provided subscriptionId"
				}
			},
			"notice": "Contract that nodes of a Decentralized Oracle Network (DON) interact with",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"dev/functions/FunctionsOracle.sol": "FunctionsOracle"
		},
		"evmVersion": "berlin",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
			"keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
			"license": "MIT",
			"urls": [
				"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
				"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
			"license": "MIT",
			"urls": [
				"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
				"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
			]
		},
		"@openzeppelin/contracts/utils/math/SafeCast.sol": {
			"keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
			"license": "MIT",
			"urls": [
				"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
				"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
			]
		},
		"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol": {
			"keccak256": "0xb5fbb623dec53bb9b6c1b738b4ab6540a04ac5dc2ac94d95fa3ebfd22898559c",
			"license": "MIT",
			"urls": [
				"bzz-raw://4a6e7f26c0c688a987c19c8b0997c7e47c33f7717b6293a487afe8429d95b8e7",
				"dweb:/ipfs/QmVrmXcQ7KLM5fw4PWeJ8j4nnmfHkjpFPariMMh5UvsEVD"
			]
		},
		"dev/functions/FunctionsOracle.sol": {
			"keccak256": "0xdc0fc6383483448930661f3fd8d396db4ad09c74f94745040f5b13e0364ffdd8",
			"license": "MIT",
			"urls": [
				"bzz-raw://8b5e8634857ad61ba6d63905adf7299be21d00774a5979d5b336345bc094f8b8",
				"dweb:/ipfs/QmUPzS4WYpfcnUWNqRBeSytxcGpwRRgaYB63zXwLLN2LHR"
			]
		},
		"dev/functions/baseManager.sol": {
			"keccak256": "0xd894b8ef8530bed6bef81ae2d3169201336263e60e2d1b89c6eedeec211b9393",
			"license": "MIT",
			"urls": [
				"bzz-raw://7a3c2e9e7815efcb142ab3e9b6d0dedf8c3974555e2f1b6e259da31d6c01750d",
				"dweb:/ipfs/Qmd1v3cwcx5qNPAPNcfdCWvTnZ96xipEWVh75c6yxgrkAR"
			]
		},
		"dev/functions/registry.sol": {
			"keccak256": "0x36feeac85c09923c68791802ca070c92949291bf04ba2d205227d56d011b7ff6",
			"license": "MIT",
			"urls": [
				"bzz-raw://c81e838e6273141a5fd534d891c1643fcb18d4f47b4bc098fe03b116f6dee49a",
				"dweb:/ipfs/QmQe1DhNYxAZSc6Z527D3v82WV7ny516DeQHrdnZNUmWYr"
			]
		},
		"dev/functions/selector.sol": {
			"keccak256": "0x3aac8de6c291392842b8f9935fa2280593ee4a75ac2ffb674c95058a19b12c25",
			"license": "MIT",
			"urls": [
				"bzz-raw://c26d5dcb6f04cd32ac595b668f7273b4f910677997367646bb51d10a74f9aa78",
				"dweb:/ipfs/QmccuLLfcjQb49uYsHoU3Ta4pCa8ykZ2aeeGyz7Z6Zft3k"
			]
		},
		"dev/interfaces/FunctionsClientInterface.sol": {
			"keccak256": "0x2cfcf4ca36ace3cb2054a25e1dd0b21becaa95d4ca506c3ce41100bcd8e1d2de",
			"license": "MIT",
			"urls": [
				"bzz-raw://0f2653ddf25139bec5f75d03f63d9d3e719451b0ba2c13f378fff244ba81e812",
				"dweb:/ipfs/QmaYSy5cpWKaRB46vP8P5Nk4hCUpxevAoPHYdSPBh7sCNr"
			]
		},
		"dev/interfaces/FunctionsOracleInterface.sol": {
			"keccak256": "0xa87ed2e8828848e3af293c40bd8896100ceed117f44089b481f80e8d05034e0e",
			"license": "MIT",
			"urls": [
				"bzz-raw://011219a5061e82c5f9b6dd09c291d55fe827989824e7171586691c52f57c59ed",
				"dweb:/ipfs/Qmee8oab7WLh23AYQetoqqSKUZYWNsFor76LeDo96wandJ"
			]
		}
	},
	"version": 1
}